const { google } = require('googleapis');
const fs = require('fs');

console.log('üîç Diagn√≥stico de Google Sheets...\n');

// Leer variables de entorno manualmente
let envVars = {};
if (fs.existsSync('.env.local')) {
  const envContent = fs.readFileSync('.env.local', 'utf8');
  envContent.split('\n').forEach(line => {
    if (line.includes('=') && !line.startsWith('#')) {
      const [key, ...value] = line.split('=');
      envVars[key.trim()] = value.join('=').trim().replace(/^"(.*)"$/, '$1');
    }
  });
}

// Verificar variables de entorno
console.log('üìã Variables de entorno:');
console.log('  GOOGLE_SERVICE_ACCOUNT_EMAIL:', envVars.GOOGLE_SERVICE_ACCOUNT_EMAIL ? '‚úÖ Configurado' : '‚ùå NO configurado');
console.log('  GOOGLE_PRIVATE_KEY:', envVars.GOOGLE_PRIVATE_KEY ? '‚úÖ Configurado' : '‚ùå NO configurado');
console.log('  GOOGLE_SHEETS_SPREADSHEET_ID:', envVars.GOOGLE_SHEETS_SPREADSHEET_ID ? '‚úÖ Configurado' : '‚ùå NO configurado');
console.log();

if (!envVars.GOOGLE_SERVICE_ACCOUNT_EMAIL || !envVars.GOOGLE_PRIVATE_KEY || !envVars.GOOGLE_SHEETS_SPREADSHEET_ID) {
  console.log('‚ùå Faltan variables de entorno');
  console.log('Contenido de .env.local:');
  console.log(Object.keys(envVars));
  process.exit(1);
}

async function testGoogleSheets() {
  try {
    console.log('üîê Configurando autenticaci√≥n...');
    
    // Configurar autenticaci√≥n
    const auth = new google.auth.GoogleAuth({
      credentials: {
        type: 'service_account',
        private_key: envVars.GOOGLE_PRIVATE_KEY.replace(/\\n/g, '\n'),
        client_email: envVars.GOOGLE_SERVICE_ACCOUNT_EMAIL,
      },
      scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    });

    console.log('‚úÖ Autenticaci√≥n configurada');

    // Crear cliente de Sheets
    const sheets = google.sheets({ version: 'v4', auth });
    console.log('‚úÖ Cliente de Google Sheets creado');

    // Obtener informaci√≥n del spreadsheet
    console.log('üìä Obteniendo informaci√≥n del spreadsheet...');
    const spreadsheetResponse = await sheets.spreadsheets.get({
      spreadsheetId: envVars.GOOGLE_SHEETS_SPREADSHEET_ID,
    });

    console.log('‚úÖ Spreadsheet encontrado:');
    console.log('  T√≠tulo:', spreadsheetResponse.data.properties.title);
    console.log('  Hojas:', spreadsheetResponse.data.sheets.map(sheet => sheet.properties.title).join(', '));

    // Intentar leer datos
    console.log('\nüìñ Intentando leer datos...');
    const readResponse = await sheets.spreadsheets.values.get({
      spreadsheetId: envVars.GOOGLE_SHEETS_SPREADSHEET_ID,
      range: 'A1:Z10',
    });

    console.log('‚úÖ Lectura exitosa');
    console.log('  Filas encontradas:', readResponse.data.values ? readResponse.data.values.length : 0);

    // Intentar escribir datos de prueba
    console.log('\n‚úèÔ∏è  Intentando escribir datos de prueba...');
    const timestamp = new Date().toISOString();
    
    const writeResponse = await sheets.spreadsheets.values.append({
      spreadsheetId: envVars.GOOGLE_SHEETS_SPREADSHEET_ID,
      range: 'A:Z',
      valueInputOption: 'USER_ENTERED',
      requestBody: {
        values: [['Prueba de conexi√≥n', timestamp, 'Exitosa ‚úÖ']],
      },
    });

    console.log('‚úÖ Escritura exitosa');
    console.log('  Filas actualizadas:', writeResponse.data.updates.updatedRows);

    console.log('\nüéâ ¬°Google Sheets funciona perfectamente!');
    console.log('\nüí° Si no ves los datos en tu aplicaci√≥n, verifica:');
    console.log('  1. Que el servidor est√© reiniciado (npm run dev)');
    console.log('  2. Que no haya errores en la consola del navegador');
    console.log('  3. Que la p√°gina /configuracion muestre punto verde');

  } catch (error) {
    console.error('\n‚ùå Error conectando con Google Sheets:');
    console.error('Tipo:', error.constructor.name);
    console.error('Mensaje:', error.message);
    
    if (error.code) {
      console.error('C√≥digo:', error.code);
    }
    
    if (error.message.includes('PERMISSION_DENIED')) {
      console.error('\nüîß Soluci√≥n:');
      console.error('  1. Ve a tu Google Sheet:');
      console.error('     https://docs.google.com/spreadsheets/d/' + envVars.GOOGLE_SHEETS_SPREADSHEET_ID);
      console.error('  2. Haz clic en "Compartir"');
      console.error('  3. Agrega el email:', envVars.GOOGLE_SERVICE_ACCOUNT_EMAIL);
      console.error('  4. Dale permisos de "Editor"');
    }
    
    if (error.message.includes('UNAUTHENTICATED')) {
      console.error('\nüîß Soluci√≥n:');
      console.error('  1. Verifica que las credenciales sean correctas');
      console.error('  2. Aseg√∫rate de que Google Sheets API est√© habilitada');
    }
    
    if (error.message.includes('Spreadsheet') && error.message.includes('not found')) {
      console.error('\nüîß Soluci√≥n:');
      console.error('  1. Verifica que el Spreadsheet ID sea correcto');
      console.error('  2. Aseg√∫rate de que la hoja exista y sea accesible');
    }
  }
}

testGoogleSheets(); 